import React, { useEffect, useState } from "react";
import { Col, Row } from "react-bootstrap";
import useHttp from "../../hooks/useHttp";
import { getAllPeople, getPagePeople } from "../../lib/api";
import Loading from "../Loading";
import Modal from "../Modal";
import Paginate from "../Pagination";

const People = () => {
  const [page, setPage] = useState({ page: 1 });
  const [modalData, setModalData] = useState(null);
  const [modalLoading, setModalLoading] = useState(false);
  const { sendRequest, status, data, error } = useHttp(getPagePeople, true);

  useEffect(() => {
    sendRequest(page.page);
  }, [sendRequest, page]);

  if (status === "pending") {
    return <Loading />;
  }
  if (error) {
    return <p>{error}</p>;
  }

  const changePage = (number) => {
    setPage({ page: number });
  };

  const fetchModal = (e) => {
    e.preventDefault();
    const type = e.target.innerHTML.toLowerCase();
    const id = e.target.id;
    async function dataForModal(typeParam) {
      const response = await fetch(
        `https://swapi.dev/api/${typeParam}/?format=json`
      );
      const data = await response.json();

      if (!response.ok) {
        throw new Error(response.message || "Could not fetch required item.");
      }
      return data;
    }

    dataForModal(type)
      .then((data) => {
        let find = data.results.filter((obj) => {
          if (type === "vehicles")
            return (
              obj.pilots.indexOf(`https://swapi.dev/api/people/${id}/`) > -1
            );
          else if (type === "films")
            return (
              obj.characters.indexOf(`https://swapi.dev/api/people/${id}/`) > -1
            );
          else
            return (
              obj.pilots.indexOf(`https://swapi.dev/api/people/${id}/`) > -1
            );
        });
        if (find.length === 0) {
          setModalData("Not found");
        } else {
          setModalData(find);
        }
      })
      .catch((err) => console.log(err));
  };

  const deleteFunc = () => setModalData(null);
  return (
    <div className="container people-container">
      {modalData !== null && (
        <Modal
          title={"Modal"}
          content={JSON.stringify(modalData)}
          onClick={deleteFunc}
        />
      )}
      <Row className="wrapper-people">
        {data.map((person, i) => {
          return (
            <Col md={12} lg={5} className="person-card" key={i}>
              <div>
                <h3>{person.name}</h3>
                <p>
                  <span>Birth year:</span> {person.birth_year}
                  <br />
                  <span>Gender:</span>{" "}
                  {person.gender === "n/a" ? `who knows?` : person.gender}{" "}
                  <br />
                </p>
              </div>
              <div className="btn-div">
                <button
                  onClick={fetchModal}
                  id={`${person.url.charAt(person.url.length - 2)}`}
                >
                  Films
                </button>
                <button
                  onClick={fetchModal}
                  id={`${person.url.charAt(person.url.length - 2)}`}
                >
                  Vehicles
                </button>
                <button
                  onClick={fetchModal}
                  id={`${person.url.charAt(person.url.length - 2)}`}
                >
                  Starships
                </button>
              </div>
            </Col>
          );
        })}
      </Row>
      <Paginate change={changePage} num={9} pageProp={page.page} />
    </div>
  );
};

export default People;
